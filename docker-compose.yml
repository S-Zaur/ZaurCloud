version: "3"
services:
  django:
    image: szaur/zaur-cloud
    ports:
      - "8000:8000"
      - "80:8000"
    volumes:
      - ./app:/app
      - files:${STORAGE_DIRECTORY}
    env_file: .env
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    container_name: zaur-cloud
    depends_on:
      pgdb:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_started
      ftp:
        condition: service_started

  test:
    image: szaur/zaur-cloud
    container_name: test
    env_file: .env
    command: >
      /bin/sh -c "python3 manage.py test --no-input"
    volumes:
      - ./app:/app
    depends_on:
      pgdb:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      django:
        condition: service_started

  migrate:
    image: szaur/zaur-cloud
    container_name: 'migrate'
    env_file: .env
    command: >
      /bin/sh -c "python3 manage.py makemigrations --force-color --no-input -v 3 && python3 manage.py migrate --force-color -v 3 && python3 manage.py createsuperuser --noinput; exit 0"
    volumes:
      - ./app:/app
    depends_on:
      pgdb:
        condition: service_healthy

  pgdb:
    image: postgres:13-alpine
    container_name: pgdb
    ports:
      - "5433:5432"
    volumes:
      - pgdbdata:/var/lib/postgresql/data
    env_file: .env
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 30s
      timeout: 60s
      retries: 5

  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - "6379:6379"
    env_file: .env

  ftp:
    image: delfer/alpine-ftp-server:latest
    container_name: ftp
    ports:
      - "21:21"
    env_file: .env

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
    env_file: .env

volumes:
  pgdbdata: null
  files: null
  grafana-storage: { }
